# Generated by Django 4.2.11 on 2025-08-12 19:28

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('doctors', '0001_initial'),
        ('appointments', '0001_initial'),
        ('patients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_id', models.CharField(max_length=20, unique=True)),
                ('record_type', models.CharField(choices=[('consultation', 'Consultation'), ('diagnosis', 'Diagnosis'), ('treatment', 'Treatment'), ('surgery', 'Surgery'), ('lab_result', 'Lab Result'), ('imaging', 'Imaging'), ('prescription', 'Prescription'), ('vaccination', 'Vaccination')], max_length=20)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('symptoms', models.TextField(blank=True, help_text='Patient symptoms')),
                ('diagnosis', models.TextField(blank=True, help_text='Medical diagnosis')),
                ('treatment_plan', models.TextField(blank=True, help_text='Recommended treatment')),
                ('prescribed_medications', models.TextField(blank=True, help_text='Prescribed medications')),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('follow_up_instructions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_confidential', models.BooleanField(default=False)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medical_records', to='appointments.appointment')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='doctors.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='patients.patient')),
            ],
            options={
                'verbose_name': 'Medical Record',
                'verbose_name_plural': 'Medical Records',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prescription_id', models.CharField(max_length=20, unique=True)),
                ('medication_name', models.CharField(max_length=200)),
                ('dosage', models.CharField(help_text="e.g., '500mg'", max_length=100)),
                ('frequency', models.CharField(help_text="e.g., 'Twice daily'", max_length=100)),
                ('duration', models.CharField(help_text="e.g., '7 days'", max_length=100)),
                ('instructions', models.TextField(help_text='Special instructions for taking the medication')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='active', max_length=20)),
                ('prescribed_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('refills_allowed', models.PositiveIntegerField(default=0)),
                ('refills_used', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='doctors.doctor')),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='medical_records.medicalrecord')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='patients.patient')),
            ],
            options={
                'verbose_name': 'Prescription',
                'verbose_name_plural': 'Prescriptions',
                'ordering': ['-prescribed_date'],
            },
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lab_id', models.CharField(max_length=20, unique=True)),
                ('test_name', models.CharField(max_length=200)),
                ('test_type', models.CharField(max_length=100)),
                ('ordered_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('results', models.TextField(blank=True, help_text='Lab test results')),
                ('normal_range', models.CharField(blank=True, help_text='Normal range for the test', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Additional notes from lab technician')),
                ('result_file', models.FileField(blank=True, null=True, upload_to='lab_results/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_results', to='doctors.doctor')),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_results', to='medical_records.medicalrecord')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_results', to='patients.patient')),
            ],
            options={
                'verbose_name': 'Lab Result',
                'verbose_name_plural': 'Lab Results',
                'ordering': ['-ordered_date'],
            },
        ),
    ]
